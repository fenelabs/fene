package systemcontracts

import (
	"encoding/hex"
	"fmt"
	"math/big"
	"reflect"
	"strings"

	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/systemcontracts/bohr"
	"github.com/ethereum/go-ethereum/core/systemcontracts/bruno"
	"github.com/ethereum/go-ethereum/core/systemcontracts/euler"
	"github.com/ethereum/go-ethereum/core/systemcontracts/feynman"
	feynmanFix "github.com/ethereum/go-ethereum/core/systemcontracts/feynman_fix"
	"github.com/ethereum/go-ethereum/core/systemcontracts/gibbs"
	haberFix "github.com/ethereum/go-ethereum/core/systemcontracts/haber_fix"
	"github.com/ethereum/go-ethereum/core/systemcontracts/kepler"
	"github.com/ethereum/go-ethereum/core/systemcontracts/luban"
	"github.com/ethereum/go-ethereum/core/systemcontracts/mirror"
	"github.com/ethereum/go-ethereum/core/systemcontracts/moran"
	"github.com/ethereum/go-ethereum/core/systemcontracts/niels"
	"github.com/ethereum/go-ethereum/core/systemcontracts/pascal"
	"github.com/ethereum/go-ethereum/core/systemcontracts/planck"
	"github.com/ethereum/go-ethereum/core/systemcontracts/plato"
	"github.com/ethereum/go-ethereum/core/systemcontracts/ramanujan"
	"github.com/ethereum/go-ethereum/core/tracing"
	"github.com/ethereum/go-ethereum/core/vm"
	"github.com/ethereum/go-ethereum/log"
	"github.com/ethereum/go-ethereum/params"
)

type UpgradeConfig struct {
	BeforeUpgrade upgradeHook
	AfterUpgrade  upgradeHook
	ContractAddr  common.Address
	CommitUrl     string
	Code          string
}

type Upgrade struct {
	UpgradeName string
	Configs     []*UpgradeConfig
}

type upgradeHook func(blockNumber *big.Int, contractAddr common.Address, statedb vm.StateDB) error

const (
	mainNet    = "Mainnet"
	felineNet  = "Feline"
	canineNet  = "Canine"
	defaultNet = "Default"
)

var (
	GenesisHash common.Hash
	// upgrade config
	ramanujanUpgrade = make(map[string]*Upgrade)

	nielsUpgrade = make(map[string]*Upgrade)

	mirrorUpgrade = make(map[string]*Upgrade)

	brunoUpgrade = make(map[string]*Upgrade)

	eulerUpgrade = make(map[string]*Upgrade)

	gibbsUpgrade = make(map[string]*Upgrade)

	moranUpgrade = make(map[string]*Upgrade)

	planckUpgrade = make(map[string]*Upgrade)

	lubanUpgrade = make(map[string]*Upgrade)

	platoUpgrade = make(map[string]*Upgrade)

	keplerUpgrade = make(map[string]*Upgrade)

	feynmanUpgrade = make(map[string]*Upgrade)

	feynmanFixUpgrade = make(map[string]*Upgrade)

	haberFixUpgrade = make(map[string]*Upgrade)

	bohrUpgrade = make(map[string]*Upgrade)

	pascalUpgrade = make(map[string]*Upgrade)
)

func init() {
	// For contract upgrades, the following information is from `bsc-genesis-contract`, to be specifically,
	// 1) `CommitUrl` is the specific git commit, based on which the byte code is compiled from;
	// 2) `Code` is the byte code of the contract, which is generated by compiling `bsc-genesis-contract`.
	// You can refer to `https://github.com/bnb-chain/bsc-genesis-contract` to compile the smart contracts and do the verification.

	ramanujanUpgrade[felineNet] = &Upgrade{
		UpgradeName: "ramanujan",
		Configs: []*UpgradeConfig{
			{
				ContractAddr: common.HexToAddress(ValidatorContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/823b953232a344ba3c32d6690e70a245477e5760",
				Code:         ramanujan.FelineValidatorContract,
			},
			{
				ContractAddr: common.HexToAddress(SlashContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/823b953232a344ba3c32d6690e70a245477e5760",
				Code:         ramanujan.FelineSlashContract,
			},
			{
				ContractAddr: common.HexToAddress(SystemRewardContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/823b953232a344ba3c32d6690e70a245477e5760",
				Code:         ramanujan.FelineSystemRewardContract,
			},
			{
				ContractAddr: common.HexToAddress(LightClientContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/823b953232a344ba3c32d6690e70a245477e5760",
				Code:         ramanujan.FelineLightClientContract,
			},
			{
				ContractAddr: common.HexToAddress(TokenHubContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/823b953232a344ba3c32d6690e70a245477e5760",
				Code:         ramanujan.FelineTokenHubContract,
			},
			{
				ContractAddr: common.HexToAddress(RelayerIncentivizeContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/823b953232a344ba3c32d6690e70a245477e5760",
				Code:         ramanujan.FelineRelayerIncentivizeContract,
			},
			{
				ContractAddr: common.HexToAddress(RelayerHubContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/823b953232a344ba3c32d6690e70a245477e5760",
				Code:         ramanujan.FelineRelayerHubContract,
			},
			{
				ContractAddr: common.HexToAddress(GovHubContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/823b953232a344ba3c32d6690e70a245477e5760",
				Code:         ramanujan.FelineGovHubContract,
			},
			{
				ContractAddr: common.HexToAddress(TokenManagerContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/823b953232a344ba3c32d6690e70a245477e5760",
				Code:         ramanujan.FelineTokenManagerContract,
			},
			{
				ContractAddr: common.HexToAddress(CrossChainContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/823b953232a344ba3c32d6690e70a245477e5760",
				Code:         ramanujan.FelineCrossChainContract,
			},
		},
	}

	nielsUpgrade[felineNet] = &Upgrade{
		UpgradeName: "niels",
		Configs: []*UpgradeConfig{
			{
				ContractAddr: common.HexToAddress(ValidatorContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/823b953232a344ba3c32d6690e70a245477e5760",
				Code:         niels.FelineValidatorContract,
			},
			{
				ContractAddr: common.HexToAddress(SlashContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/823b953232a344ba3c32d6690e70a245477e5760",
				Code:         niels.FelineSlashContract,
			},
			{
				ContractAddr: common.HexToAddress(SystemRewardContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/823b953232a344ba3c32d6690e70a245477e5760",
				Code:         niels.FelineSystemRewardContract,
			},
			{
				ContractAddr: common.HexToAddress(LightClientContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/823b953232a344ba3c32d6690e70a245477e5760",
				Code:         niels.FelineLightClientContract,
			},
			{
				ContractAddr: common.HexToAddress(TokenHubContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/823b953232a344ba3c32d6690e70a245477e5760",
				Code:         niels.FelineTokenHubContract,
			},
			{
				ContractAddr: common.HexToAddress(RelayerIncentivizeContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/823b953232a344ba3c32d6690e70a245477e5760",
				Code:         niels.FelineRelayerIncentivizeContract,
			},
			{
				ContractAddr: common.HexToAddress(RelayerHubContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/823b953232a344ba3c32d6690e70a245477e5760",
				Code:         niels.FelineRelayerHubContract,
			},
			{
				ContractAddr: common.HexToAddress(GovHubContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/823b953232a344ba3c32d6690e70a245477e5760",
				Code:         niels.FelineGovHubContract,
			},
			{
				ContractAddr: common.HexToAddress(TokenManagerContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/823b953232a344ba3c32d6690e70a245477e5760",
				Code:         niels.FelineTokenManagerContract,
			},
			{
				ContractAddr: common.HexToAddress(CrossChainContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/823b953232a344ba3c32d6690e70a245477e5760",
				Code:         niels.FelineCrossChainContract,
			},
		},
	}

	mirrorUpgrade[mainNet] = &Upgrade{
		UpgradeName: "mirror",
		Configs: []*UpgradeConfig{
			{
				ContractAddr: common.HexToAddress(TokenManagerContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/af4f3993303213052222f55c721e661862d19638",
				Code:         mirror.MainnetTokenManagerContract,
			},
			{
				ContractAddr: common.HexToAddress(TokenHubContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/af4f3993303213052222f55c721e661862d19638",
				Code:         mirror.MainnetTokenHubContract,
			},
			{
				ContractAddr: common.HexToAddress(RelayerIncentivizeContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/af4f3993303213052222f55c721e661862d19638",
				Code:         mirror.MainnetRelayerIncentivizeContract,
			},
		},
	}

	mirrorUpgrade[felineNet] = &Upgrade{
		UpgradeName: "mirror",
		Configs: []*UpgradeConfig{
			{
				ContractAddr: common.HexToAddress(TokenManagerContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/af4f3993303213052222f55c721e661862d19638",
				Code:         mirror.FelineTokenManagerContract,
			},
			{
				ContractAddr: common.HexToAddress(TokenHubContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/af4f3993303213052222f55c721e661862d19638",
				Code:         mirror.FelineTokenHubContract,
			},
			{
				ContractAddr: common.HexToAddress(RelayerIncentivizeContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/af4f3993303213052222f55c721e661862d19638",
				Code:         mirror.FelineRelayerIncentivizeContract,
			},
		},
	}

	brunoUpgrade[mainNet] = &Upgrade{
		UpgradeName: "bruno",
		Configs: []*UpgradeConfig{
			{
				ContractAddr: common.HexToAddress(ValidatorContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/ce622fef469d84ee418fa6181f3ac962412a5f4f",
				Code:         bruno.MainnetValidatorContract,
			},
		},
	}

	brunoUpgrade[felineNet] = &Upgrade{
		UpgradeName: "bruno",
		Configs: []*UpgradeConfig{
			{
				ContractAddr: common.HexToAddress(ValidatorContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/ce622fef469d84ee418fa6181f3ac962412a5f4f",
				Code:         bruno.FelineValidatorContract,
			},
		},
	}

	eulerUpgrade[mainNet] = &Upgrade{
		UpgradeName: "euler",
		Configs: []*UpgradeConfig{
			{
				ContractAddr: common.HexToAddress(ValidatorContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/db8bb560ac5a1265c685b719c7e976dced162310",
				Code:         euler.MainnetValidatorContract,
			},
			{
				ContractAddr: common.HexToAddress(SlashContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/db8bb560ac5a1265c685b719c7e976dced162310",
				Code:         euler.MainnetSlashContract,
			},
		},
	}

	eulerUpgrade[felineNet] = &Upgrade{
		UpgradeName: "euler",
		Configs: []*UpgradeConfig{
			{
				ContractAddr: common.HexToAddress(ValidatorContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/db8bb560ac5a1265c685b719c7e976dced162310",
				Code:         euler.FelineValidatorContract,
			},
			{
				ContractAddr: common.HexToAddress(SlashContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/db8bb560ac5a1265c685b719c7e976dced162310",
				Code:         euler.FelineSlashContract,
			},
		},
	}

	gibbsUpgrade[mainNet] = &Upgrade{
		UpgradeName: "gibbs",
		Configs: []*UpgradeConfig{
			{
				ContractAddr: common.HexToAddress(TokenHubContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/8cfa94e657670d60ac1ff0563cddcf4664f77227",
				Code:         gibbs.MainnetTokenHubContract,
			},
			{
				ContractAddr: common.HexToAddress(StakingContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/8cfa94e657670d60ac1ff0563cddcf4664f77227",
				Code:         gibbs.MainnetStakingContract,
			},
		},
	}

	gibbsUpgrade[felineNet] = &Upgrade{
		UpgradeName: "gibbs",
		Configs: []*UpgradeConfig{
			{
				ContractAddr: common.HexToAddress(TokenHubContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/9d45b31c12b2c04757284717f4351cb44e81a3a7",
				Code:         gibbs.FelineTokenHubContract,
			},
			{
				ContractAddr: common.HexToAddress(StakingContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/9d45b31c12b2c04757284717f4351cb44e81a3a7",
				Code:         gibbs.FelineStakingContract,
			},
		},
	}

	moranUpgrade[mainNet] = &Upgrade{
		UpgradeName: "moran",
		Configs: []*UpgradeConfig{
			{
				ContractAddr: common.HexToAddress(RelayerHubContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/c184a00160b6a2d884b4d6efebe1358a047e9e57",
				Code:         moran.MainnetRelayerHubContract,
			},
			{
				ContractAddr: common.HexToAddress(LightClientContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/c184a00160b6a2d884b4d6efebe1358a047e9e57",
				Code:         moran.MainnetLightClientContract,
			},
			{
				ContractAddr: common.HexToAddress(CrossChainContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/c184a00160b6a2d884b4d6efebe1358a047e9e57",
				Code:         moran.MainnetCrossChainContract,
			},
		},
	}

	moranUpgrade[felineNet] = &Upgrade{
		UpgradeName: "moran",
		Configs: []*UpgradeConfig{
			{
				ContractAddr: common.HexToAddress(RelayerHubContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/c184a00160b6a2d884b4d6efebe1358a047e9e57",
				Code:         moran.FelineRelayerHubContract,
			},
			{
				ContractAddr: common.HexToAddress(LightClientContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/c184a00160b6a2d884b4d6efebe1358a047e9e57",
				Code:         moran.FelineLightClientContract,
			},
			{
				ContractAddr: common.HexToAddress(CrossChainContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/c184a00160b6a2d884b4d6efebe1358a047e9e57",
				Code:         moran.FelineCrossChainContract,
			},
		},
	}

	planckUpgrade[mainNet] = &Upgrade{
		UpgradeName: "planck",
		Configs: []*UpgradeConfig{
			{
				ContractAddr: common.HexToAddress(SlashContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/78e13b1d3a5a1b08c9208af94a9b14fc1efda213",
				Code:         planck.MainnetSlashContract,
			},
			{
				ContractAddr: common.HexToAddress(TokenHubContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/78e13b1d3a5a1b08c9208af94a9b14fc1efda213",
				Code:         planck.MainnetTokenHubContract,
			},
			{
				ContractAddr: common.HexToAddress(CrossChainContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/78e13b1d3a5a1b08c9208af94a9b14fc1efda213",
				Code:         planck.MainnetCrossChainContract,
			},
		},
	}

	planckUpgrade[felineNet] = &Upgrade{
		UpgradeName: "planck",
		Configs: []*UpgradeConfig{
			{
				ContractAddr: common.HexToAddress(SlashContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/78e13b1d3a5a1b08c9208af94a9b14fc1efda213",
				Code:         planck.FelineSlashContract,
			},
			{
				ContractAddr: common.HexToAddress(TokenHubContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/78e13b1d3a5a1b08c9208af94a9b14fc1efda213",
				Code:         planck.FelineTokenHubContract,
			},
			{
				ContractAddr: common.HexToAddress(CrossChainContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/78e13b1d3a5a1b08c9208af94a9b14fc1efda213",
				Code:         planck.FelineCrossChainContract,
			},
			{
				ContractAddr: common.HexToAddress(StakingContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/78e13b1d3a5a1b08c9208af94a9b14fc1efda213",
				Code:         planck.FelineStakingContract,
			},
		},
	}

	lubanUpgrade[mainNet] = &Upgrade{
		UpgradeName: "luban",
		Configs: []*UpgradeConfig{
			{
				ContractAddr: common.HexToAddress(ValidatorContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/b144718e94d7a1ebb24a7103202300f08826f369",
				Code:         luban.MainnetValidatorContract,
			},
			{
				ContractAddr: common.HexToAddress(SlashContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/b144718e94d7a1ebb24a7103202300f08826f369",
				Code:         luban.MainnetSlashContract,
			},
			{
				ContractAddr: common.HexToAddress(SystemRewardContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/b144718e94d7a1ebb24a7103202300f08826f369",
				Code:         luban.MainnetSystemRewardContract,
			},
			{
				ContractAddr: common.HexToAddress(RelayerHubContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/b144718e94d7a1ebb24a7103202300f08826f369",
				Code:         luban.MainnetRelayerHubContract,
			},
			{
				ContractAddr: common.HexToAddress(CrossChainContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/b144718e94d7a1ebb24a7103202300f08826f369",
				Code:         luban.MainnetCrossChainContract,
			},
		},
	}

	lubanUpgrade[felineNet] = &Upgrade{
		UpgradeName: "luban",
		Configs: []*UpgradeConfig{
			{
				ContractAddr: common.HexToAddress(ValidatorContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/b144718e94d7a1ebb24a7103202300f08826f369",
				Code:         luban.FelineValidatorContract,
			},
			{
				ContractAddr: common.HexToAddress(SlashContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/b144718e94d7a1ebb24a7103202300f08826f369",
				Code:         luban.FelineSlashContract,
			},
			{
				ContractAddr: common.HexToAddress(SystemRewardContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/b144718e94d7a1ebb24a7103202300f08826f369",
				Code:         luban.FelineSystemRewardContract,
			},
			{
				ContractAddr: common.HexToAddress(RelayerHubContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/b144718e94d7a1ebb24a7103202300f08826f369",
				Code:         luban.FelineRelayerHubContract,
			},
			{
				ContractAddr: common.HexToAddress(CrossChainContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/b144718e94d7a1ebb24a7103202300f08826f369",
				Code:         luban.FelineCrossChainContract,
			},
		},
	}

	platoUpgrade[mainNet] = &Upgrade{
		UpgradeName: "plato",
		Configs: []*UpgradeConfig{
			{
				ContractAddr: common.HexToAddress(ValidatorContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/0f352c4623898d92664a46cbfc26c52b79aad838",
				Code:         plato.MainnetValidatorContract,
			},
			{
				ContractAddr: common.HexToAddress(SlashContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/0f352c4623898d92664a46cbfc26c52b79aad838",
				Code:         plato.MainnetSlashContract,
			},
		},
	}

	platoUpgrade[felineNet] = &Upgrade{
		UpgradeName: "plato",
		Configs: []*UpgradeConfig{
			{
				ContractAddr: common.HexToAddress(ValidatorContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/0f352c4623898d92664a46cbfc26c52b79aad838",
				Code:         plato.FelineValidatorContract,
			},
			{
				ContractAddr: common.HexToAddress(SlashContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/0f352c4623898d92664a46cbfc26c52b79aad838",
				Code:         plato.FelineSlashContract,
			},
		},
	}

	keplerUpgrade[mainNet] = &Upgrade{
		UpgradeName: "kepler",
		Configs: []*UpgradeConfig{
			{
				ContractAddr: common.HexToAddress(ValidatorContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/b3a5c1fa8882c0e546dc5ba913ce4db77ec9befe",
				Code:         kepler.MainnetValidatorContract,
			},
			{
				ContractAddr: common.HexToAddress(SlashContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/b3a5c1fa8882c0e546dc5ba913ce4db77ec9befe",
				Code:         kepler.MainnetSlashContract,
			},
			{
				ContractAddr: common.HexToAddress(SystemRewardContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/b3a5c1fa8882c0e546dc5ba913ce4db77ec9befe",
				Code:         kepler.MainnetSystemRewardContract,
			},
		},
	}

	keplerUpgrade[felineNet] = &Upgrade{
		UpgradeName: "kepler",
		Configs: []*UpgradeConfig{
			{
				ContractAddr: common.HexToAddress(ValidatorContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/b3a5c1fa8882c0e546dc5ba913ce4db77ec9befe",
				Code:         kepler.FelineValidatorContract,
			},
			{
				ContractAddr: common.HexToAddress(SlashContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/b3a5c1fa8882c0e546dc5ba913ce4db77ec9befe",
				Code:         kepler.FelineSlashContract,
			},
			{
				ContractAddr: common.HexToAddress(SystemRewardContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/b3a5c1fa8882c0e546dc5ba913ce4db77ec9befe",
				Code:         kepler.FelineSystemRewardContract,
			},
		},
	}

	feynmanUpgrade[mainNet] = &Upgrade{
		UpgradeName: "feynman",
		Configs: []*UpgradeConfig{
			{
				ContractAddr: common.HexToAddress(ValidatorContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/2dbebb57a0d436d6a30b78c1f123395035249035",
				Code:         feynman.MainnetValidatorContract,
			},
			{
				ContractAddr: common.HexToAddress(SlashContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/2dbebb57a0d436d6a30b78c1f123395035249035",
				Code:         feynman.MainnetSlashContract,
			},
			{
				ContractAddr: common.HexToAddress(TokenHubContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/2dbebb57a0d436d6a30b78c1f123395035249035",
				Code:         feynman.MainnetTokenHubContract,
			},
			{
				ContractAddr: common.HexToAddress(GovHubContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/2dbebb57a0d436d6a30b78c1f123395035249035",
				Code:         feynman.MainnetGovHubContract,
			},
			{
				ContractAddr: common.HexToAddress(CrossChainContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/2dbebb57a0d436d6a30b78c1f123395035249035",
				Code:         feynman.MainnetCrossChainContract,
			},
			{
				ContractAddr: common.HexToAddress(StakingContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/2dbebb57a0d436d6a30b78c1f123395035249035",
				Code:         feynman.MainnetStakingContract,
			},
			{
				ContractAddr: common.HexToAddress(StakeHubContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/2dbebb57a0d436d6a30b78c1f123395035249035",
				Code:         feynman.MainnetStakeHubContract,
			},
			{
				ContractAddr: common.HexToAddress(StakeCreditContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/2dbebb57a0d436d6a30b78c1f123395035249035",
				Code:         feynman.MainnetStakeCreditContract,
			},
			{
				ContractAddr: common.HexToAddress(GovernorContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/2dbebb57a0d436d6a30b78c1f123395035249035",
				Code:         feynman.MainnetGovernorContract,
			},
			{
				ContractAddr: common.HexToAddress(GovTokenContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/2dbebb57a0d436d6a30b78c1f123395035249035",
				Code:         feynman.MainnetGovTokenContract,
			},
			{
				ContractAddr: common.HexToAddress(TimelockContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/2dbebb57a0d436d6a30b78c1f123395035249035",
				Code:         feynman.MainnetTimelockContract,
			},
			{
				ContractAddr: common.HexToAddress(TokenRecoverPortalContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/2dbebb57a0d436d6a30b78c1f123395035249035",
				Code:         feynman.MainnetTokenRecoverPortalContract,
			},
		},
	}

	feynmanUpgrade[felineNet] = &Upgrade{
		UpgradeName: "feynman",
		Configs: []*UpgradeConfig{
			{
				ContractAddr: common.HexToAddress(ValidatorContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/9d09d0a3d6332460a810188261ec8195e05aa218",
				Code:         feynman.FelineValidatorContract,
			},
			{
				ContractAddr: common.HexToAddress(SlashContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/9d09d0a3d6332460a810188261ec8195e05aa218",
				Code:         feynman.FelineSlashContract,
			},
			{
				ContractAddr: common.HexToAddress(TokenHubContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/9d09d0a3d6332460a810188261ec8195e05aa218",
				Code:         feynman.FelineTokenHubContract,
			},
			{
				ContractAddr: common.HexToAddress(GovHubContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/9d09d0a3d6332460a810188261ec8195e05aa218",
				Code:         feynman.FelineGovHubContract,
			},
			{
				ContractAddr: common.HexToAddress(CrossChainContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/9d09d0a3d6332460a810188261ec8195e05aa218",
				Code:         feynman.FelineCrossChainContract,
			},
			{
				ContractAddr: common.HexToAddress(StakingContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/9d09d0a3d6332460a810188261ec8195e05aa218",
				Code:         feynman.FelineStakingContract,
			},
			{
				ContractAddr: common.HexToAddress(StakeHubContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/9d09d0a3d6332460a810188261ec8195e05aa218",
				Code:         feynman.FelineStakeHubContract,
			},
			{
				ContractAddr: common.HexToAddress(StakeCreditContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/9d09d0a3d6332460a810188261ec8195e05aa218",
				Code:         feynman.MainnetStakeCreditContract,
			},
			{
				ContractAddr: common.HexToAddress(GovernorContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/9d09d0a3d6332460a810188261ec8195e05aa218",
				Code:         feynman.FelineGovernorContract,
			},
			{
				ContractAddr: common.HexToAddress(GovTokenContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/9d09d0a3d6332460a810188261ec8195e05aa218",
				Code:         feynman.MainnetGovTokenContract,
			},
			{
				ContractAddr: common.HexToAddress(TimelockContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/9d09d0a3d6332460a810188261ec8195e05aa218",
				Code:         feynman.FelineTimelockContract,
			},
			{
				ContractAddr: common.HexToAddress(TokenRecoverPortalContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/9d09d0a3d6332460a810188261ec8195e05aa218",
				Code:         feynman.FelineTokenRecoverPortalContract,
			},
		},
	}

	// This upgrade is to fix an error on testnet only. So the upgrade config of mainnet is empty.
	feynmanFixUpgrade[mainNet] = &Upgrade{
		UpgradeName: "feynmanFix",
		Configs:     []*UpgradeConfig{},
	}

	feynmanFixUpgrade[felineNet] = &Upgrade{
		UpgradeName: "feynmanFix",
		Configs: []*UpgradeConfig{
			{
				ContractAddr: common.HexToAddress(ValidatorContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/2d6372ddba77902ef01e45887a425938376d5a5c",
				Code:         feynmanFix.FelineValidatorContract,
			},
			{
				ContractAddr: common.HexToAddress(StakeHubContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/2d6372ddba77902ef01e45887a425938376d5a5c",
				Code:         feynmanFix.FelineStakeHubContract,
			},
		},
	}

	haberFixUpgrade[mainNet] = &Upgrade{
		UpgradeName: "haberFix",
		Configs: []*UpgradeConfig{
			{
				ContractAddr: common.HexToAddress(ValidatorContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/b743ce3f1f1e94c349b175cd6593bc263463b33b",
				Code:         haberFix.MainnetValidatorContract,
			},
			{
				ContractAddr: common.HexToAddress(SlashContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/b743ce3f1f1e94c349b175cd6593bc263463b33b",
				Code:         haberFix.MainnetSlashContract,
			},
		},
	}

	haberFixUpgrade[felineNet] = &Upgrade{
		UpgradeName: "haberFix",
		Configs: []*UpgradeConfig{
			{
				ContractAddr: common.HexToAddress(ValidatorContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/b743ce3f1f1e94c349b175cd6593bc263463b33b",
				Code:         haberFix.FelineValidatorContract,
			},
			{
				ContractAddr: common.HexToAddress(SlashContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/b743ce3f1f1e94c349b175cd6593bc263463b33b",
				Code:         haberFix.FelineSlashContract,
			},
		},
	}

	bohrUpgrade[mainNet] = &Upgrade{
		UpgradeName: "bohr",
		Configs: []*UpgradeConfig{
			{
				ContractAddr: common.HexToAddress(ValidatorContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/398c9364aad5261c1ecd90ac3ab2df89b65c45e3",
				Code:         bohr.MainnetValidatorContract,
			},
			{
				ContractAddr: common.HexToAddress(StakeHubContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/398c9364aad5261c1ecd90ac3ab2df89b65c45e3",
				Code:         bohr.MainnetStakeHubContract,
			},
		},
	}

	bohrUpgrade[felineNet] = &Upgrade{
		UpgradeName: "bohr",
		Configs: []*UpgradeConfig{
			{
				ContractAddr: common.HexToAddress(ValidatorContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/398c9364aad5261c1ecd90ac3ab2df89b65c45e3",
				Code:         bohr.FelineValidatorContract,
			},
			{
				ContractAddr: common.HexToAddress(StakeHubContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/398c9364aad5261c1ecd90ac3ab2df89b65c45e3",
				Code:         bohr.FelineStakeHubContract,
			},
		},
	}

	pascalUpgrade[mainNet] = &Upgrade{
		UpgradeName: "pascal",
		Configs: []*UpgradeConfig{
			{
				ContractAddr: common.HexToAddress(ValidatorContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.MainnetValidatorContract,
			},
			{
				ContractAddr: common.HexToAddress(SlashContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.MainnetSlashContract,
			},
			{
				ContractAddr: common.HexToAddress(SystemRewardContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.MainnetSystemRewardContract,
			},
			{
				ContractAddr: common.HexToAddress(LightClientContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.MainnetLightClientContract,
			},
			{
				ContractAddr: common.HexToAddress(TokenHubContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.MainnetTokenHubContract,
			},
			{
				ContractAddr: common.HexToAddress(RelayerIncentivizeContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.MainnetRelayerIncentivizeContract,
			},
			{
				ContractAddr: common.HexToAddress(RelayerHubContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.MainnetRelayerHubContract,
			},
			{
				ContractAddr: common.HexToAddress(GovHubContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.MainnetGovHubContract,
			},
			{
				ContractAddr: common.HexToAddress(TokenManagerContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.MainnetTokenManagerContract,
			},
			{
				ContractAddr: common.HexToAddress(CrossChainContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.MainnetCrossChainContract,
			},
			{
				ContractAddr: common.HexToAddress(StakingContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.MainnetStakingContract,
			},
			{
				ContractAddr: common.HexToAddress(StakeHubContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.MainnetStakeHubContract,
			},
			{
				ContractAddr: common.HexToAddress(StakeCreditContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.MainnetStakeCreditContract,
			},
			{
				ContractAddr: common.HexToAddress(GovernorContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.MainnetGovernorContract,
			},
			{
				ContractAddr: common.HexToAddress(GovTokenContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.MainnetGovTokenContract,
			},
			{
				ContractAddr: common.HexToAddress(TimelockContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.MainnetTimelockContract,
			},
			{
				ContractAddr: common.HexToAddress(TokenRecoverPortalContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.MainnetTokenRecoverPortalContract,
			},
		},
	}

	pascalUpgrade[felineNet] = &Upgrade{
		UpgradeName: "pascal",
		Configs: []*UpgradeConfig{
			{
				ContractAddr: common.HexToAddress(ValidatorContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.FelineValidatorContract,
			},
			{
				ContractAddr: common.HexToAddress(SlashContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.FelineSlashContract,
			},
			{
				ContractAddr: common.HexToAddress(SystemRewardContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.FelineSystemRewardContract,
			},
			{
				ContractAddr: common.HexToAddress(LightClientContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.FelineLightClientContract,
			},
			{
				ContractAddr: common.HexToAddress(TokenHubContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.FelineTokenHubContract,
			},
			{
				ContractAddr: common.HexToAddress(RelayerIncentivizeContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.FelineRelayerIncentivizeContract,
			},
			{
				ContractAddr: common.HexToAddress(RelayerHubContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.FelineRelayerHubContract,
			},
			{
				ContractAddr: common.HexToAddress(GovHubContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.FelineGovHubContract,
			},
			{
				ContractAddr: common.HexToAddress(TokenManagerContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.FelineTokenManagerContract,
			},
			{
				ContractAddr: common.HexToAddress(CrossChainContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.FelineCrossChainContract,
			},
			{
				ContractAddr: common.HexToAddress(StakingContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.FelineStakingContract,
			},
			{
				ContractAddr: common.HexToAddress(StakeHubContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.FelineStakeHubContract,
			},
			{
				ContractAddr: common.HexToAddress(StakeCreditContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.FelineStakeCreditContract,
			},
			{
				ContractAddr: common.HexToAddress(GovernorContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.FelineGovernorContract,
			},
			{
				ContractAddr: common.HexToAddress(GovTokenContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.FelineGovTokenContract,
			},
			{
				ContractAddr: common.HexToAddress(TimelockContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.FelineTimelockContract,
			},
			{
				ContractAddr: common.HexToAddress(TokenRecoverPortalContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.FelineTokenRecoverPortalContract,
			},
		},
	}

	pascalUpgrade[canineNet] = &Upgrade{
		UpgradeName: "pascal",
		Configs: []*UpgradeConfig{
			{
				ContractAddr: common.HexToAddress(ValidatorContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.RialtoValidatorContract,
			},
			{
				ContractAddr: common.HexToAddress(SlashContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.RialtoSlashContract,
			},
			{
				ContractAddr: common.HexToAddress(SystemRewardContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.RialtoSystemRewardContract,
			},
			{
				ContractAddr: common.HexToAddress(LightClientContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.RialtoLightClientContract,
			},
			{
				ContractAddr: common.HexToAddress(TokenHubContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.RialtoTokenHubContract,
			},
			{
				ContractAddr: common.HexToAddress(RelayerIncentivizeContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.RialtoRelayerIncentivizeContract,
			},
			{
				ContractAddr: common.HexToAddress(RelayerHubContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.RialtoRelayerHubContract,
			},
			{
				ContractAddr: common.HexToAddress(GovHubContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.RialtoGovHubContract,
			},
			{
				ContractAddr: common.HexToAddress(TokenManagerContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.RialtoTokenManagerContract,
			},
			{
				ContractAddr: common.HexToAddress(CrossChainContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.RialtoCrossChainContract,
			},
			{
				ContractAddr: common.HexToAddress(StakingContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.RialtoStakingContract,
			},
			{
				ContractAddr: common.HexToAddress(StakeHubContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.RialtoStakeHubContract,
			},
			{
				ContractAddr: common.HexToAddress(StakeCreditContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.RialtoStakeCreditContract,
			},
			{
				ContractAddr: common.HexToAddress(GovernorContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.RialtoGovernorContract,
			},
			{
				ContractAddr: common.HexToAddress(GovTokenContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.RialtoGovTokenContract,
			},
			{
				ContractAddr: common.HexToAddress(TimelockContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.RialtoTimelockContract,
			},
			{
				ContractAddr: common.HexToAddress(TokenRecoverPortalContract),
				CommitUrl:    "https://github.com/bnb-chain/bsc-genesis-contract/commit/020c0459e37d1f9d635c1cff86dd1099ab1383fa",
				Code:         pascal.RialtoTokenRecoverPortalContract,
			},
		},
	}
}

func TryUpdateBuildInSystemContract(config *params.ChainConfig, blockNumber *big.Int, lastBlockTime uint64, blockTime uint64, statedb vm.StateDB, atBlockBegin bool) {
	if atBlockBegin {
		if !config.IsFeynman(blockNumber, lastBlockTime) {
			upgradeBuildInSystemContract(config, blockNumber, lastBlockTime, blockTime, statedb)
		}
		// HistoryStorageAddress is a special system contract in bsc, which can't be upgraded
		if config.IsOnPrague(blockNumber, lastBlockTime, blockTime) {
			statedb.SetCode(params.HistoryStorageAddress, params.HistoryStorageCode)
			statedb.SetNonce(params.HistoryStorageAddress, 1, tracing.NonceChangeNewContract)
			log.Info("Set code for HistoryStorageAddress", "blockNumber", blockNumber.Int64(), "blockTime", blockTime)
		}
	} else {
		if config.IsFeynman(blockNumber, lastBlockTime) {
			upgradeBuildInSystemContract(config, blockNumber, lastBlockTime, blockTime, statedb)
		}
	}
}

func upgradeBuildInSystemContract(config *params.ChainConfig, blockNumber *big.Int, lastBlockTime uint64, blockTime uint64, statedb vm.StateDB) {
	if config == nil || blockNumber == nil || statedb == nil || reflect.ValueOf(statedb).IsNil() {
		return
	}

	var network string
	switch GenesisHash {
	/* Add mainnet genesis hash */
	case params.FeneGenesisHash:
		network = mainNet
	case params.FelineGenesisHash:
		network = felineNet
	case params.CanineGenesisHash:
		network = canineNet
	default:
		network = defaultNet
	}

	logger := log.New("system-contract-upgrade", network)
	if config.IsOnRamanujan(blockNumber) {
		applySystemContractUpgrade(ramanujanUpgrade[network], blockNumber, statedb, logger)
	}

	if config.IsOnNiels(blockNumber) {
		applySystemContractUpgrade(nielsUpgrade[network], blockNumber, statedb, logger)
	}

	if config.IsOnMirrorSync(blockNumber) {
		applySystemContractUpgrade(mirrorUpgrade[network], blockNumber, statedb, logger)
	}

	if config.IsOnBruno(blockNumber) {
		applySystemContractUpgrade(brunoUpgrade[network], blockNumber, statedb, logger)
	}

	if config.IsOnEuler(blockNumber) {
		applySystemContractUpgrade(eulerUpgrade[network], blockNumber, statedb, logger)
	}

	if config.IsOnGibbs(blockNumber) {
		applySystemContractUpgrade(gibbsUpgrade[network], blockNumber, statedb, logger)
	}

	if config.IsOnMoran(blockNumber) {
		applySystemContractUpgrade(moranUpgrade[network], blockNumber, statedb, logger)
	}

	if config.IsOnPlanck(blockNumber) {
		applySystemContractUpgrade(planckUpgrade[network], blockNumber, statedb, logger)
	}

	if config.IsOnLuban(blockNumber) {
		applySystemContractUpgrade(lubanUpgrade[network], blockNumber, statedb, logger)
	}

	if config.IsOnPlato(blockNumber) {
		applySystemContractUpgrade(platoUpgrade[network], blockNumber, statedb, logger)
	}

	if config.IsOnShanghai(blockNumber, lastBlockTime, blockTime) {
		logger.Info("Empty upgrade config for shanghai", "height", blockNumber.String())
	}

	if config.IsOnKepler(blockNumber, lastBlockTime, blockTime) {
		applySystemContractUpgrade(keplerUpgrade[network], blockNumber, statedb, logger)
	}

	if config.IsOnFeynman(blockNumber, lastBlockTime, blockTime) {
		applySystemContractUpgrade(feynmanUpgrade[network], blockNumber, statedb, logger)
	}

	if config.IsOnFeynmanFix(blockNumber, lastBlockTime, blockTime) {
		applySystemContractUpgrade(feynmanFixUpgrade[network], blockNumber, statedb, logger)
	}

	if config.IsOnHaberFix(blockNumber, lastBlockTime, blockTime) {
		applySystemContractUpgrade(haberFixUpgrade[network], blockNumber, statedb, logger)
	}

	if config.IsOnBohr(blockNumber, lastBlockTime, blockTime) {
		applySystemContractUpgrade(bohrUpgrade[network], blockNumber, statedb, logger)
	}

	if config.IsOnPascal(blockNumber, lastBlockTime, blockTime) {
		applySystemContractUpgrade(pascalUpgrade[network], blockNumber, statedb, logger)
	}

	/*
		apply other upgrades
	*/
}

func applySystemContractUpgrade(upgrade *Upgrade, blockNumber *big.Int, statedb vm.StateDB, logger log.Logger) {
	if upgrade == nil {
		logger.Info("Empty upgrade config", "height", blockNumber.String())
		return
	}

	logger.Info(fmt.Sprintf("Apply upgrade %s at height %d", upgrade.UpgradeName, blockNumber.Int64()))
	for _, cfg := range upgrade.Configs {
		logger.Info(fmt.Sprintf("Upgrade contract %s to commit %s", cfg.ContractAddr.String(), cfg.CommitUrl))

		if cfg.BeforeUpgrade != nil {
			err := cfg.BeforeUpgrade(blockNumber, cfg.ContractAddr, statedb)
			if err != nil {
				panic(fmt.Errorf("contract address: %s, execute beforeUpgrade error: %s", cfg.ContractAddr.String(), err.Error()))
			}
		}

		newContractCode, err := hex.DecodeString(strings.TrimSpace(cfg.Code))
		if err != nil {
			panic(fmt.Errorf("failed to decode new contract code: %s", err.Error()))
		}
		statedb.SetCode(cfg.ContractAddr, newContractCode)

		if cfg.AfterUpgrade != nil {
			err := cfg.AfterUpgrade(blockNumber, cfg.ContractAddr, statedb)
			if err != nil {
				panic(fmt.Errorf("contract address: %s, execute afterUpgrade error: %s", cfg.ContractAddr.String(), err.Error()))
			}
		}
	}
}
